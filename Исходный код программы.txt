using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace NeuronWF
{
    public class MB // MessageBox класс
    {
        public void Information(string a, string b)
        {
            MessageBox.Show
                (
                  a,b,
                  MessageBoxButtons.OK,
                  MessageBoxIcon.Information,
                  MessageBoxDefaultButton.Button1,
                  MessageBoxOptions.DefaultDesktopOnly
                 );
        }
        public void Error(string a, string b)
        {
            MessageBox.Show
                (
                  a, b,
                  MessageBoxButtons.OK,
                  MessageBoxIcon.Error,
                  MessageBoxDefaultButton.Button1,
                  MessageBoxOptions.DefaultDesktopOnly
                 );
        }
        public void Warning(string a, string b)
        {
            MessageBox.Show
                (
                  a, b,
                  MessageBoxButtons.OK,
                  MessageBoxIcon.Exclamation,
                  MessageBoxDefaultButton.Button1,
                  MessageBoxOptions.DefaultDesktopOnly
                 );
        }
    }
    public class Neuron
    {
        private decimal weight = 0.5m;
        public decimal LastError { get; private set; }
        public decimal Smoothing { get; set; } = 0.00001m;
        public decimal get_weight()
        {
            return weight;
        }
        public void set_weight(decimal s_weight)
        {
            weight = s_weight;
        }
        public decimal ProcessInputData(decimal input)
        {
            return input * weight;
        }
        public decimal RestoreInputData(decimal output)
        {
            return output / weight;
        }
        public void Train(decimal input, decimal expectedResult)
        {
            var actualResult = input * weight;
            LastError = expectedResult - actualResult;
            var correction = (LastError / actualResult) * Smoothing;
            weight += correction;
        }
    }
    static class Program
    {
        /// <summary>
        /// Главная точка входа для приложения.
        /// </summary>
        [STAThread]
        static void Main()
        {   
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Form1());
        }
    }
}